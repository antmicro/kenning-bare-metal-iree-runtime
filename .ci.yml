image: $CI_IMAGE

.ace: &ace
    tags: ['ace-x86_64']

.common_only: &common_only
    only:
        - main
        - merge_requests

variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: none
    GIT_SUBMODULE_UPDATE_FLAGS: --jobs `nproc`
    IREE_HOST_BIN_DIR: "/opt/iree_compiler/bin"
    RISCV_TOOLCHAIN_ROOT: "/opt/toolchain_iree_rv32imf"
    RENODE_PATH: "/usr/bin"

stages:
    - lint
    - build
    - tests

.prepare_submodules_recursive: &prepare_submodules_recursive |-
    build_tools/configure_git_url_rewrite.sh
    git submodule update --init --recursive

.prepare_submodules_normal: &prepare_submodules_normal |-
    build_tools/configure_git_url_rewrite.sh
    git submodule update --init

.build_prepare: &build_prepare |-
    build_tools/configure_cmake.sh -G Ninja

.i2c_accelerometer_build_prepare: &i2c_accelerometer_build_prepare |-
    build_tools/configure_cmake.sh -G Ninja -DI2C_ACCELEROMETER=True

.minimal_build_prepare: &minimal_build_prepare |-
    build_tools/configure_cmake.sh -G Ninja -DMINIMAL_BUILD=True

clang_format:
    <<: *ace
    <<: *common_only
    stage: lint
    before_script:
        - *minimal_build_prepare
    script:
        - cmake --build build/build-riscv --target clang-format

clang_tidy:
    <<: *ace
    <<: *common_only
    stage: lint
    before_script:
        - *prepare_submodules_normal
        - *minimal_build_prepare
    script:
        - git -C third-party/iree-rv32-springbok submodule update --init
        - cmake --build build/build-riscv --target clang-tidy

build:
    <<: *ace
    <<: *common_only
    stage: build
    before_script:
        - *prepare_submodules_recursive
        - *build_prepare
    script:
        - cmake --build build/build-riscv
    artifacts:
        paths:
        - build/build-riscv/iree-runtime/iree_runtime
        when: always

i2c_accelerometer_build:
    <<: *ace
    <<: *common_only
    stage: build
    before_script:
        - *prepare_submodules_recursive
        - *i2c_accelerometer_build_prepare
    script:
        - cmake --build build/build-riscv
    artifacts:
        paths:
        - build/build-riscv/iree-runtime/iree_runtime_i2c_accelerometer
        when: always

unit_tests:
    <<: *ace
    <<: *common_only
    stage: tests
    before_script:
        - *minimal_build_prepare
    script:
        - cmake --build build/build-riscv --target unit-tests
        - cmake --build build/build-riscv --target unit-tests-coverage
    artifacts:
        paths:
        - unit-tests/build/artifacts/gcov/*
        when: always

renode_tests:
    <<: *ace
    <<: *common_only
    stage: tests
    before_script:
        - *prepare_submodules_normal
        - *minimal_build_prepare
        - git -C third-party/kenning lfs pull
        - python3 -m pip install ./third-party/kenning
    script:
        - cmake --build build/build-riscv --target renode-tests
    artifacts:
        paths:
        - renode-tests/results/robot_output.xml
        - renode-tests/results/log.html
        - renode-tests/results/report.html
        - renode-tests/results/opcode_stats.txt
        - renode-tests/results/kenning_output.json
        - renode-tests/results/kenning_stdout.txt
        - renode-tests/results/kenning_stderr.txt
        - renode-tests/results/benchmarks/
        when: always
